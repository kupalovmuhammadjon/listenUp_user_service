// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: podcasts.proto

package podcasts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PodcastCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PodcastCreate) Reset() {
	*x = PodcastCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_podcasts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodcastCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodcastCreate) ProtoMessage() {}

func (x *PodcastCreate) ProtoReflect() protoreflect.Message {
	mi := &file_podcasts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodcastCreate.ProtoReflect.Descriptor instead.
func (*PodcastCreate) Descriptor() ([]byte, []int) {
	return file_podcasts_proto_rawDescGZIP(), []int{0}
}

func (x *PodcastCreate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PodcastCreate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PodcastCreate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PodcastCreate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_podcasts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_podcasts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_podcasts_proto_rawDescGZIP(), []int{1}
}

func (x *Filter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Filter) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Filter) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_podcasts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_podcasts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_podcasts_proto_rawDescGZIP(), []int{2}
}

func (x *ID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Podcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Podcast) Reset() {
	*x = Podcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_podcasts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Podcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Podcast) ProtoMessage() {}

func (x *Podcast) ProtoReflect() protoreflect.Message {
	mi := &file_podcasts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Podcast.ProtoReflect.Descriptor instead.
func (*Podcast) Descriptor() ([]byte, []int) {
	return file_podcasts_proto_rawDescGZIP(), []int{3}
}

func (x *Podcast) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Podcast) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Podcast) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Podcast) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Podcast) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Podcast) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PodcastUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status      string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PodcastUpdate) Reset() {
	*x = PodcastUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_podcasts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodcastUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodcastUpdate) ProtoMessage() {}

func (x *PodcastUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_podcasts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodcastUpdate.ProtoReflect.Descriptor instead.
func (*PodcastUpdate) Descriptor() ([]byte, []int) {
	return file_podcasts_proto_rawDescGZIP(), []int{4}
}

func (x *PodcastUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PodcastUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PodcastUpdate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PodcastUpdate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PodcastUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_podcasts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_podcasts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_podcasts_proto_rawDescGZIP(), []int{5}
}

type UserPodcasts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Podcasts []*Podcast `protobuf:"bytes,1,rep,name=Podcasts,proto3" json:"Podcasts,omitempty"`
}

func (x *UserPodcasts) Reset() {
	*x = UserPodcasts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_podcasts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPodcasts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPodcasts) ProtoMessage() {}

func (x *UserPodcasts) ProtoReflect() protoreflect.Message {
	mi := &file_podcasts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPodcasts.ProtoReflect.Descriptor instead.
func (*UserPodcasts) Descriptor() ([]byte, []int) {
	return file_podcasts_proto_rawDescGZIP(), []int{6}
}

func (x *UserPodcasts) GetPodcasts() []*Podcast {
	if x != nil {
		return x.Podcasts
	}
	return nil
}

type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_podcasts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_podcasts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_podcasts_proto_rawDescGZIP(), []int{7}
}

func (x *Success) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_podcasts_proto protoreflect.FileDescriptor

var file_podcasts_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x22, 0x78, 0x0a, 0x0d, 0x50, 0x6f,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x02,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x07, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x88, 0x01,
	0x0a, 0x0d, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x06, 0x0a, 0x04, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x3d, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73,
	0x12, 0x2d, 0x0a, 0x08, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x08, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x22,
	0x23, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x32, 0x92, 0x03, 0x0a, 0x08, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x73, 0x12, 0x38, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x0c, 0x2e, 0x70, 0x6f,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x49, 0x44, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x2e,
	0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70, 0x6f,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x17, 0x2e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x0e, 0x2e, 0x70, 0x6f, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x0c, 0x2e,
	0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x49, 0x44, 0x1a, 0x0e, 0x2e, 0x70, 0x6f,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73,
	0x12, 0x10, 0x2e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x0c,
	0x2e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70,
	0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x00, 0x12, 0x36, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x0c, 0x2e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x73, 0x2e, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6f, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_podcasts_proto_rawDescOnce sync.Once
	file_podcasts_proto_rawDescData = file_podcasts_proto_rawDesc
)

func file_podcasts_proto_rawDescGZIP() []byte {
	file_podcasts_proto_rawDescOnce.Do(func() {
		file_podcasts_proto_rawDescData = protoimpl.X.CompressGZIP(file_podcasts_proto_rawDescData)
	})
	return file_podcasts_proto_rawDescData
}

var file_podcasts_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_podcasts_proto_goTypes = []interface{}{
	(*PodcastCreate)(nil), // 0: podcasts.PodcastCreate
	(*Filter)(nil),        // 1: podcasts.Filter
	(*ID)(nil),            // 2: podcasts.ID
	(*Podcast)(nil),       // 3: podcasts.Podcast
	(*PodcastUpdate)(nil), // 4: podcasts.PodcastUpdate
	(*Void)(nil),          // 5: podcasts.Void
	(*UserPodcasts)(nil),  // 6: podcasts.UserPodcasts
	(*Success)(nil),       // 7: podcasts.Success
}
var file_podcasts_proto_depIdxs = []int32{
	3, // 0: podcasts.UserPodcasts.Podcasts:type_name -> podcasts.Podcast
	0, // 1: podcasts.Podcasts.CreatePodcast:input_type -> podcasts.PodcastCreate
	2, // 2: podcasts.Podcasts.GetPodcastById:input_type -> podcasts.ID
	4, // 3: podcasts.Podcasts.UpdatePodcast:input_type -> podcasts.PodcastUpdate
	2, // 4: podcasts.Podcasts.DeletePodcast:input_type -> podcasts.ID
	1, // 5: podcasts.Podcasts.GetUserPodcasts:input_type -> podcasts.Filter
	2, // 6: podcasts.Podcasts.PublishPodcast:input_type -> podcasts.ID
	2, // 7: podcasts.Podcasts.ValidatePodcastId:input_type -> podcasts.ID
	2, // 8: podcasts.Podcasts.CreatePodcast:output_type -> podcasts.ID
	3, // 9: podcasts.Podcasts.GetPodcastById:output_type -> podcasts.Podcast
	5, // 10: podcasts.Podcasts.UpdatePodcast:output_type -> podcasts.Void
	5, // 11: podcasts.Podcasts.DeletePodcast:output_type -> podcasts.Void
	6, // 12: podcasts.Podcasts.GetUserPodcasts:output_type -> podcasts.UserPodcasts
	7, // 13: podcasts.Podcasts.PublishPodcast:output_type -> podcasts.Success
	7, // 14: podcasts.Podcasts.ValidatePodcastId:output_type -> podcasts.Success
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_podcasts_proto_init() }
func file_podcasts_proto_init() {
	if File_podcasts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_podcasts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodcastCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_podcasts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_podcasts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_podcasts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Podcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_podcasts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodcastUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_podcasts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_podcasts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPodcasts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_podcasts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_podcasts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_podcasts_proto_goTypes,
		DependencyIndexes: file_podcasts_proto_depIdxs,
		MessageInfos:      file_podcasts_proto_msgTypes,
	}.Build()
	File_podcasts_proto = out.File
	file_podcasts_proto_rawDesc = nil
	file_podcasts_proto_goTypes = nil
	file_podcasts_proto_depIdxs = nil
}
